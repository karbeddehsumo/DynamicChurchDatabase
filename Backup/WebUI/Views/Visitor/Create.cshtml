@model Domain.visitor

@{
    ViewBag.Title = "Create";
  
}

<div id="AjaxFormPane" class="panel">
    <h2 class="center">Add Visitor</h2>
    <div class="center" style="color:red">@TempData["message2"]</div>

    <div class="center">
@using (Ajax.BeginForm("Create", "Visitor", new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "AjaxFormPane" }, new { @class = "center border", @style = "padding-left:60px;width:90%;" }))
{
    @Html.AntiForgeryToken()
           
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Add visitor here...</legend>
         
        <div class="editor">
            @Html.LabelFor(model => model.Title)
            @Html.DropDownListFor(model => model.Title, ViewBag.VisitorTitleList as SelectList, "")
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.FirstName,"First Name")
            @Html.EditorFor(model => model.FirstName)
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.LastName,"Last Name")
            @Html.EditorFor(model => model.LastName)
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Suffix)
            @Html.DropDownListFor(model => model.Suffix, ViewBag.SuffixList as SelectList, "Choose Suffix")
            @Html.ValidationMessageFor(model => model.Suffix)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.subCategoryID,"Category")
            @Html.DropDownListFor(model => model.subCategoryID, ViewBag.VisitorCategoryList as SelectList, "")
            @Html.ValidationMessageFor(model => model.subCategoryID)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.LastEventAttended,"Event Attended")
            @Html.DropDownListFor(model => model.LastEventAttended, ViewBag.LastEventAttendedList as SelectList, "")
            @Html.ValidationMessageFor(model => model.LastEventAttended)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.EventDate,"Event Date")
             @Html.TextBoxFor(model => model.EventDate, new { @Value = DateTime.Now.ToShortDateString(), id = "datepicker" })
            @Html.ValidationMessageFor(model => model.EventDate)
        </div>

         <div class="editor">
            @Html.LabelFor(model => model.BestContact,"Best Contact")
            @Html.DropDownListFor(model => model.BestContact, ViewBag.BestContactList as SelectList, "")
            @Html.ValidationMessageFor(model => model.BestContact)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.phoneNumber,"Phone #")
            @Html.EditorFor(model => model.phoneNumber)
            @Html.ValidationMessageFor(model => model.phoneNumber)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.PhoneProviderID,"Phone Provider")
            @Html.DropDownListFor(model => model.PhoneProviderID, ViewBag.CellProviderList as SelectList, "Choose Phone Provider")
            @Html.ValidationMessageFor(model => model.PhoneProviderID)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Email)
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

       
        <div class="editor">
            @Html.LabelFor(model => model.Address)
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Address2)
            @Html.EditorFor(model => model.Address2)
            @Html.ValidationMessageFor(model => model.Address2)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.City)
            @Html.EditorFor(model => model.City)
            @Html.ValidationMessageFor(model => model.City)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.State)
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Zip)
            @Html.EditorFor(model => model.Zip)
            @Html.ValidationMessageFor(model => model.Zip)
        </div>
        <div class="editor">
            @Html.LabelFor(model => model.Comment)
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

            @Html.HiddenFor(model => model.Status)
         @Html.HiddenFor(model => model.EnteredBy)
         @Html.HiddenFor(model => model.EnteredBy)


               <div id="formSubmitButton">
            <button id="ButtonClick" type="submit" class="btn btn-default">Add</button>
            <button id="CloseBotton" class="btn btn-default">Close</button>
        </div>
    </fieldset>
}
        </div>

    <div id="FieldSetSubMenu">
        <div class="center">
     <input id="ShowBestContactButton" value="Add best contact" type="button" />
    <input id="ShowVisitorTitleButton" value="Add visitor title." type="button" />
    <input id="ShowVisitorCategoryButton" value="Add visitor category" type="button" />
    <input id="ShowLastEventAttendedButton" value="Add event attended" type="button" />
            </div>
    <div id="ConstantDiv" class="center">
    @using (Ajax.BeginForm("AddConstant", "Constant", new { }, new AjaxOptions
            {
                HttpMethod = "Post",
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "familyroster"
            }))
            {
                    
                                 <label id="BestContactLabel">Add Best Contact Type</label>
                                 <label id="VisitorTitleLabel">Add Visitor Title Type</label>
                                 <label id="VisitorCategoryLabel">Add Visitor Category Type</label>
                                <label id="LastEventAttendedLabel">Add Last Event Attended Type</label>
                             <input id="value1" name="value1"  type="text"/>
                                <input id="aCategory" name="aCategory" type="hidden" />
                                 <input id="ConstantSubmitBtn" type="submit" value="Add" />

            }
        </div>
        </div>
   
</div>


<script type="text/javascript">

    $(document).ready(function () {

        $(".datefield").datepicker();
        $('#datepicker').not('.hasDatePicker').datepicker();

        //Add best contact
        $("#ConstantDiv").hide();
        $("#BestContactLabel").hide();
        $("#VisitorTitleLabel").hide();
        $("#LastEventAttendedLabel").hide();
        $("#VisitorCategoryLabel").hide();
        $(document).on("click", "#ShowBestContactButton", function (event) {
            //hide label
            $("#BestContactLabel").show();
            $("#VisitorTitleLabel").hide();
            $("#VisitorCategoryLabel").hide();
            $("#LastEventAttendedLabel").hide();
            $("value1").val("");

            $("#aCategory").val("Best Contact");
            $("#ConstantDiv").show();
        });

        //Add visitor title
        $(document).on("click", "#ShowVisitorTitleButton", function (event) {
            //hide label
            $("#BestContactLabel").hide();
            $("#VisitorTitleLabel").show();
            $("#VisitorCategoryLabel").hide();
            $("#LastEventAttendedLabel").hide();
            $("#value1").val("");

            $("#aCategory").val("Visitor Title");
            $("#ConstantDiv").show();
        });

        //Add visitor category
        $(document).on("click", "#ShowVisitorCategoryButton", function (event) {
            //hide label
            $("#BestContactLabel").hide();
            $("#VisitorTitleLabel").hide();
            $("#VisitorCategoryLabel").show();
            $("#LastEventAttendedLabel").hide();
            $("#value1").val("");

            $("#aCategory").val("Visitor Category");
            $("#ConstantDiv").show();
        });

        //Add last event attended 
        $(document).on("click", "#ShowLastEventAttendedButton", function (event) {
            //hide label
            $("#BestContactLabel").hide();
            $("#VisitorTitleLabel").hide();
            $("#VisitorCategoryLabel").hide();
            $("#LastEventAttendedLabel").show();
            $("#value1").val("");

            $("#aCategory").val("Last Event Attended");
            $("#ConstantDiv").show();
        });

        $(document).on("click", "#ConstantSubmitBtn", function (event) {
            $("#ConstantDiv").hide();
        });

        $("#CloseBotton").click(function (event) {
            $("#AjaxFormPane").hide();
        });

        $('#ButtonClick').click(function (event) {
             if ($('#Title option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the title");
            }
            else if ($("#FirstName").val() == 0) {
                event.preventDefault();
                alert("Please enter the first name.");
            }
            else if ($("#LastName").val() == 0) {
                event.preventDefault();
                alert("Please enter the last name.");
            }
            else if ($('#subCategoryID option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the category");
            }
            else if ($('#LastEventAttended option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the last event this visitor attended");
            }
            else if ($('#BestContact option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the best contact type");
            }
            
            else if (($('#BestContact option:selected').text() == "Phone") && ($("#phoneNumber").val() == 0)) {
                event.preventDefault();
                    alert("Please enter the phone number.");
            }
            else if (($('#BestContact option:selected').text() == "Text") && ($("#phoneNumber").val() == 0) && ($('#BestContact option:selected').text() == "")) {
                event.preventDefault();
                alert("Please enter the phone provider for texting.");
            }
               
            else if (($('#BestContact option:selected').text() == "Email") && ($("#Email").val() == 0)) {
                event.preventDefault();
                    alert("Please enter the email address.");
            }

            else if (($('#BestContact option:selected').text() == "Email & Text") && ($('#PhoneProviderID option:selected').text() == "")) {
                event.preventDefault();
                alert("Please select the email phone provider.");
            }

            else if (($('#BestContact option:selected').text() == "Mail") && (($("#Address").val() == 0) || ($("#City").val() == 0) || ($("#State").val() == 0) || ($("#Zip").val() == 0))) {
                event.preventDefault();
                alert("Please enter the address, city, state and zip.");
            }
            else {

            }
        });
    });
</script>

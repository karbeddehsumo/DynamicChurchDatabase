@model Domain.member

@{
    ViewBag.Title = "AdminPage";  
}
<script src="../../Scripts/jquery-ui-1.8.20.min.js"></script>

<div id="AjaxFormPane" class="panel">
    <div class="center" style="color:red">@TempData["message2"]</div>
    <h2 class="center">Add Member</h2>
    <div class="center">
@using (Ajax.BeginForm("Create", "Member", new AjaxOptions { InsertionMode = InsertionMode.Replace, UpdateTargetId = "AjaxFormPane" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Add new member</legend>

        <div class="editor">
            @Html.LabelFor(model => model.familyID,"Family")<br />
            @Html.DropDownListFor(model => model.familyID, ViewBag.FamilyList as SelectList, "Select Family...")
            @Html.ValidationMessageFor(model => model.familyID)
        </div>
        <div id="familyDataDiv">
         <div class="editor">
            @Html.LabelFor(model => model.Address)
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @placeholder = "Address" } })
            @Html.ValidationMessageFor(model => model.Address)
        </div>

         <div class="editor">
            @Html.LabelFor(model => model.Address2)
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @placeholder = "Address2" } })
            @Html.ValidationMessageFor(model => model.Address2)
        </div>

                 <div class="editor">
            @Html.LabelFor(model => model.City)
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @placeholder = "City" } })
            @Html.ValidationMessageFor(model => model.City)
        </div>

                 <div class="editor">
            @Html.LabelFor(model => model.State)
            @Html.EditorFor(model => model.State, new { htmlAttributes = new { @placeholder = "State" } })
            @Html.ValidationMessageFor(model => model.State)
        </div>

                 <div class="editor">
            @Html.LabelFor(model => model.Zip)
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @placeholder = "Zip Code" } })
            @Html.ValidationMessageFor(model => model.Zip)
        </div>
       </div>
        <div class="editor">
            @Html.LabelFor(model => model.FirstName,"First Name")
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @placeholder = "First Name" } })
            @Html.ValidationMessageFor(model => model.FirstName)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.MiddleName,"Middle Name")
            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @placeholder = "Middle Name" } })
            @Html.ValidationMessageFor(model => model.MiddleName)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.LastName,"Last Name")
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @placeholder = "Last Name" } })
            @Html.ValidationMessageFor(model => model.LastName)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Suffix)
            @Html.DropDownListFor(model => model.Suffix, ViewBag.SuffixList as SelectList, "Choose Suffix")
            @Html.ValidationMessageFor(model => model.Suffix)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.PhoneNumber,"Phone #")
            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @placeholder = "Phone #" } })
            @Html.ValidationMessageFor(model => model.PhoneNumber)
        </div>
        <div class="editor">
            @Html.LabelFor(model => model.PhoneProviderID,"Phone Provider")
            @Html.DropDownListFor(model => model.PhoneProviderID, ViewBag.CellProviderList as SelectList, "Choose Phone Provider")
            @Html.ValidationMessageFor(model => model.PhoneProviderID)
        </div>

                 <div class="editor">
            @Html.LabelFor(model => model.EmailAddress,"Email")
            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @placeholder = "Email Address" } })
            @Html.ValidationMessageFor(model => model.EmailAddress)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.DOB,"Date of Birth")
            @Html.TextBoxFor(model => model.DOB, new { @Value = DateTime.Now.ToShortDateString(), id = "datepicker" })
            @Html.ValidationMessageFor(model => model.DOB)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.Gender)
            @Html.DropDownListFor(x => x.Gender, new SelectList(new [] {"Male", "Female"}),"Select Gender") 
            @Html.ValidationMessageFor(model => model.Gender)
        </div>

         

        <div class="editor">
            @Html.LabelFor(model => model.MembershipDate,"Membership Date")
            @Html.TextBoxFor(model => model.MembershipDate, new { @Value = DateTime.Now.ToShortDateString(), id = "datepicker2" })
            @Html.ValidationMessageFor(model => model.MembershipDate)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.ChurchTitle,"Church Title")
            @Html.DropDownListFor(model => model.ChurchTitle, ViewBag.ChurchTitleList as SelectList, "Choose Church Title")
            @Html.ValidationMessageFor(model => model.ChurchTitle)
        </div>

        

       
        <div class="editor">
            @Html.LabelFor(model => model.ContactTypeID,"Contact Type")
            @Html.DropDownListFor(model => model.ContactTypeID, ViewBag.ContactTypeList as SelectList, "Choose Best Contact Type")
            @Html.ValidationMessageFor(model => model.ContactTypeID)
        </div>

        

        @Html.HiddenFor(model => model.Status)
        @Html.HiddenFor(model => model.EnteredBy)
        @Html.HiddenFor(model => model.DateEntered)

        <div id="formSubmitButton">


            <button id="ButtonClick" type="submit" class="btn btn-default">Add</button>
            <button class="btn btn-default">Close</button>
        </div>
    </fieldset>
}
</div>
  
</div>


<script type="text/javascript">

    $(document).ready(function () {

        $(".datefield").datepicker();
        $('#datepicker').not('.hasDatePicker').datepicker();
        $('#datepicker2').not('.hasDatePicker').datepicker();

        $("#CloseBotton").click(function (event) {
            $("#AjaxFormPane").hide();
        });

        $("#familyID").change(function (event) {
            var i = $("#familyID option:selected").text().indexOf('-');
            if (i >0)
            {
                $("#LastName").val($("#familyID option:selected").text().substring(0, i - 1));
                $("#familyDataDiv").hide();
            }
            else
            {
                $("#familyDataDiv").show();
             }
           
        });

        $('#ButtonClick').click(function (event) {
            if ($("#FirstName").val() == 0) {
                event.preventDefault();
                alert("Please enter the first name.");
            }
            else if ($("#LastName").val() == 0) {
                event.preventDefault();
                alert("Please enter the last name.");
            }
            else if ($("#Gender").val() == 0) {
                event.preventDefault();
                alert("Please enter the gender.");
            }
            else if ($('#ContactTypeID option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the contact type.");
            }
            else if ((($('#ContactTypeID option:selected').text() != "None") && ($('#ContactTypeID option:selected').text() != "Email Only")) && ($("#PhoneNumber").val() == 0)) {
                event.preventDefault();
                alert("Please enter the phone number.");
            }
            else if (($('#ContactTypeID option:selected').text() != "None") && ($('#PhoneProviderID option:selected').val().length == 0) && ($("#EmailAddress").val() == 0)) {
                event.preventDefault();
                    alert("Please enter Email address or cell phone provider");
            }
        });
    });
</script>
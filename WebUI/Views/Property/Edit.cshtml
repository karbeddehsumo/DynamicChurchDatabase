@model Domain.property

@{
    ViewBag.Title = "Edit";
}

<div id="AjaxFormPane">
    <div class="center-text" style="color:red">@TempData["message2"]</div>


@using (Html.BeginForm("Edit", "Property", new {}, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
            
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Add new property here...</legend>

        @Html.HiddenFor(model => model.propertyID)

        <div class="editor-label">
            @Html.LabelFor(model => model.Title)
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.subCategoryID,"Category")
            @Html.DropDownListFor(model => model.subCategoryID, ViewBag.PropertyCategoryList as SelectList, "")
            @Html.ValidationMessageFor(model => model.subCategoryID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
            @Html.DropDownListFor(model => model.Status, ViewBag.StatusList as SelectList, "")
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.PictureID)
            @Html.EditorFor(model => model.PictureID)
            @Html.ValidationMessageFor(model => model.PictureID)
        </div>

         <div class="editor">
        <label>Upload File</label> 
        <input id="files" type="file" name="files"  />
            </div>

      <div class="editor">
            @Html.LabelFor(model => model.EnteredBy,"Entered By")
            @Html.TextBoxFor(model => model.EnteredBy, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.EnteredBy)
        </div>

        <div class="editor">
            @Html.LabelFor(model => model.DateEntered,"Date Entered")
            @Html.TextBoxFor(model => model.DateEntered, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.DateEntered)
        </div>

               <div id="formSubmitButton">
            <button id="ButtonClick" type="submit" class="btn btn-default">Edit</button>
            <button id="CloseBotton" class="btn btn-default">Close</button>
        </div>
    </fieldset>
}

</div>


<script type="text/javascript">

    $(document).ready(function () {

        $(".datefield").datepicker();
        $('#datepicker').not('.hasDatePicker').datepicker();

        $("#CloseBotton").click(function (event) {
            $("#AjaxFormPane").hide();
        });


        $('#ButtonClick').click(function (event) {
            if ($('#subCategoryID option:selected').val().length == 0) {
                event.preventDefault();
                alert("Please select the property category.");
            }
            else if ($("#Title").val() == 0) {
                event.preventDefault();
                alert("Please enter the property Title.");
            }

        });
    });
</script>